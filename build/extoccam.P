Patterns: Tree
---------

Start (Process:Process)
SpecList ()
NoSpec ()
ASpec (Spec:Spec, Next:SpecList)
Spec (Pos)
DeclType (Pos, Type:Type)
Decl (Pos, Type:Type, IdList:IdList)
Is (Pos, Type:Type, Sym, Elemental:Elemental)
AVal (Pos, Type:Type, Sym, Expr:Expr)
Val (Pos, Type:Type, Sym, Expr:Expr)
ValRetypes (Pos, Type:Type, Sym, Expr:Expr)
ValReshapes (Pos, Type:Type, Sym, Expr:Expr)
Retypes (Pos, Type:Type, Sym, Elemental:Elemental)
Reshapes (Pos, Type:Type, Sym, Elemental:Elemental)
DefAPro (Pos)
DefSeqPro (Pos, Sym, SeqProList:SeqProList)
DefTagPro (Pos, Sym, TagProList:TagProList)
DefAProc (Pos, Sym, Formals:Formals)
DefProc (Pos, Sym, Formals:Formals, Process:Process)
InlineDefProc (Pos, Sym, Formals:Formals, Process:Process)
PrototypeProc (Pos, Sym, Formals:Formals, Module, Lang)
DefAFunc (Pos, Sym, TypeList:TypeList, Formals:Formals)
DefFunc (Pos, Sym, TypeList:TypeList, Formals:Formals, Valof:Valof)
InlineDefFunc (Pos, Sym, TypeList:TypeList, Formals:Formals, Valof:Valof)
DefIsFunc (Pos, Sym, TypeList:TypeList, Formals:Formals, ExprList:ExprList)
InlineDefIsFunc (Pos, Sym, TypeList:TypeList, Formals:Formals, ExprList:ExprList)
PrototypeFunc (Pos, Sym, TypeList:TypeList, Formals:Formals, Module, Lang)
NullSpec (Pos)
HCode (Pos, Code)
CallFrame (Pos, Id, Sym)
ParFrame (Pos, TId, FId, Sym, Rep)
Formals ()
NoFormal ()
NoFormals (Sym)
AFormal (Next:Formals, Pos, By:By, Type:Type, Sym)
Replicator (Sym, From:Expr, For:Expr)
TagProList ()
NoTagPro ()
ATagPro (Next:TagProList, Sym, SeqProList:SeqProList)
By ()
ByVal ()
ByRef ()
ByUndef ()
IdList ()
NoId ()
AnId (Next:IdList, Sym)
Type ()
Array (Expr:Expr, Type:Type)
UserArray (Expr:Expr, Type:Type, Pos, Sym)
Chan (Protocol:Protocol)
Timer ()
Untyped ()
UntypedByte ()
UntypedReal ()
UntypedInteger ()
UntypedInt ()
UntypedHex ()
Primitive ()
Numeric ()
Integer ()
Int ()
UserInt (Pos, Sym)
Int16 ()
UserInt16 (Pos, Sym)
Int32 ()
UserInt32 (Pos, Sym)
Int64 ()
UserInt64 (Pos, Sym)
Real ()
Real32 ()
UserReal32 (Pos, Sym)
Real64 ()
UserReal64 (Pos, Sym)
Byte ()
UserByte (Pos, Sym)
Bool ()
UserBool (Pos, Sym)
UserStructTypes (Pos, Sym, FieldList:FieldList)
UserDataTypes (Pos, Sym, FieldList:FieldList)
UserRecord (Pos, Sym, FieldList:FieldList)
UserPackedRecord (Pos, Sym, FieldList:FieldList)
UserUnion (Pos, Sym, FieldList:FieldList)
UserChanRecord (Pos, Sym, FieldList:FieldList)
TypeList ()
NoType ()
AType (Next:TypeList, Type:Type)
FieldList ()
NoField ()
AField (Next:FieldList, Sym, Type:Type)
Protocol (Pos)
Any (Pos)
Named (Pos, Sym)
Simple (Pos, Type:Type)
Counted (Pos, Length:Type, Type:Type)
SeqProList ()
NoSeqPro ()
ASeqPro (Next:SeqProList, Protocol:Protocol)
Expr (Pos)
Binary (Pos, Lop:Expr, Rop:Expr, Op:Op)
Unary (Pos, Expr:Expr, Op:Op)
Const (Pos, Value, Type:Type)
Valof (Pos, SpecList:SpecList, Process:Process, ExprList:ExprList)
FuncCall (Pos, Sym, ExprList:ExprList)
ElementalExpr (Pos, Elemental:Elemental)
Default (Pos)
Convert (Pos, Type:Type, Expr:Expr)
Round (Pos, Type:Type, Expr:Expr)
Trunc (Pos, Type:Type, Expr:Expr)
MostPos (Pos, Type:Type)
MostNeg (Pos, Type:Type)
CountArray (Pos, Length:Expr, Expr:Expr)
UnBound (Pos)
BytesIn (Pos)
BytesInType (Pos, Type:Type)
BytesInExpr (Pos, Expr:Expr)
SizeOf (Pos, Type:Type)
OffsetOf (Pos, Type:Type, UnmappedIdentifier:UnmappedIdentifier)
StringElement (Pos)
String (Pos, Value, Type:Type)
StringSubscript (Pos, Next:StringElement, Expr:Expr)
StringRange (Pos, Next:StringElement, From:Expr, For:Expr)
Elemental (Pos)
TableElement (Pos)
Table (Pos, ExprList:ExprList)
UserLiteral (Pos, ExprList:ExprList, Type:Type)
TableExpr (Pos, Expr:Expr, Sym)
TableSubscript (Pos, Next:TableElement, Expr:Expr)
TableRange (Pos, Next:TableElement, From:Expr, For:Expr)
Element (Pos)
Identifier (Pos, Sym)
UnmappedIdentifier (Pos, Sym, Ident)
ElementAccess (Pos, Next:Element)
Subscript (Pos, Next:Element, Expr:Expr)
Range (Pos, Next:Element, From:Expr, For:Expr)
ExprList ()
NoExpr ()
AnExpr (Next:ExprList, Expr:Expr)
Op ()
RelOp ()
Less ()
Greater ()
LessEqual ()
GreaterEqual ()
Equal ()
NotEqual ()
MathsOp ()
Add ()
Subtract ()
Multiply ()
Divide ()
Rem ()
BitOp ()
BitAnd ()
BitOr ()
BitEor ()
ShiftOp ()
LeftShift ()
RightShift ()
UniOp ()
Size ()
BitNot ()
Not ()
ClockOp ()
Plus ()
Minus ()
Times ()
LogOp ()
And ()
Or ()
AfterOp ()
Process (Pos, SpecList:SpecList)
Assign (Pos, SpecList:SpecList, Lval:ExprList, Rval:ExprList)
AltType (Pos, SpecList:SpecList, Pri)
Alt (Pos, SpecList:SpecList, Pri, AltList:AltList)
AltRep (Pos, SpecList:SpecList, Pri, Replicator:Replicator, AltList:AltList)
ParType (Pos, SpecList:SpecList, PType)
Par (Pos, SpecList:SpecList, PType, ProcList:ProcList)
ParRep (Pos, SpecList:SpecList, PType, Replicator:Replicator, Process:Process)
Processor (Pos, SpecList:SpecList, Expr:Expr, Name, Process:Process)
IfType (Pos, SpecList:SpecList)
If (Pos, SpecList:SpecList, ChoiceList:ChoiceList)
IfRep (Pos, SpecList:SpecList, Replicator:Replicator, ChoiceList:ChoiceList)
Input (Pos, SpecList:SpecList, Element:Element, ExprList:ExprList)
Output (Pos, SpecList:SpecList, Element:Element, ExprList:ExprList)
CaseIn (Pos, SpecList:SpecList, Element:Element, CaseList:CaseList)
After (Pos, SpecList:SpecList, Element:Element, Expr:Expr)
SeqRep (Pos, SpecList:SpecList, Replicator:Replicator, Process:Process)
Seq (Pos, SpecList:SpecList, ProcList:ProcList)
Case (Pos, SpecList:SpecList, Selector:Expr, ChoiceList:ChoiceList)
While (Pos, SpecList:SpecList, Expr:Expr, Process:Process)
Skip (Pos, SpecList:SpecList)
Stop (Pos, SpecList:SpecList)
Instance (Pos, SpecList:SpecList, Sym, ExprList:ExprList)
CCode (Pos, SpecList:SpecList, Code)
NullProcess (Pos, SpecList:SpecList)
AltList ()
NoAlt ()
AnAlts (SpecList:SpecList, Next:AltList)
AnAlt (SpecList:SpecList, Next:AltList, Guard:Guard)
ANewAlt (SpecList:SpecList, Next:AltList, AltType:AltType)
Guard (Pos, Expr:Expr)
AltInput (Pos, Expr:Expr, Input:Input, Process:Process)
AltTimer (Pos, Expr:Expr, After:After, Process:Process)
AltCaseIn (Pos, Expr:Expr, CaseIn:CaseIn)
NoInput (Pos, Expr:Expr, Process:Process)
ChoiceList ()
NoChoice ()
AChoices (SpecList:SpecList, Next:ChoiceList)
AChoice (SpecList:SpecList, Next:ChoiceList, ExprList:ExprList, Process:Process)
ANewIf (SpecList:SpecList, Next:ChoiceList, IfType:IfType)
ProcList ()
NoProcess ()
AProcess (Next:ProcList, Process:Process)
CaseList ()
NoCase ()
ACase (Next:CaseList, SpecList:SpecList, ExprList:ExprList, Process:Process)
AccessList ()
AnAccess (Next:AccessList, Sym, ElementList:ElementList)
NoAccess ()
ElementList ()
AnElement (Next:ElementList, Element:Element)
NoElement ()

