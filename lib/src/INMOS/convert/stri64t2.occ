#OPTION "E V" -- no compiler libraries, no vector space
#COMMENT "Type conversion library V1.1 22/03/90"
#COMMENT "(c) Copyright INMOS Limited 1988"
PROC STRINGTOINT64 (BOOL Error, INT64 n, VAL []BYTE string)

  --{{{  history
  -- No digits behaviour corrected 19.2.88
  -- V1.0, 1-Jul-88
  -- Added V to OPTIONs; V1.1, 22-Mar-90 SRH
  --}}}

  [4]INT n RETYPES n:
  INT chars.scanned:
  INT carry, digit:
  BOOL Neg, More :
  --{{{  ValidDigit
  PROC ValidDigit (INT digit, BOOL valid, VAL BYTE ch)
    --convert char to decimal digit and set valid flag
    SEQ
      digit := (INT ch)
      IF
        ((INT '0') <= digit) AND (digit <= (INT '9'))
          SEQ
            digit:= (digit - (INT '0'))
            valid := TRUE
        TRUE
          valid := FALSE
  :
  --}}}
  SEQ
    n := [0, 0, 0, 0]
    Error := FALSE
    IF
      (SIZE string) > 0
        SEQ
          Neg := string[0] = '-'
          IF
            (string[0] = '+') OR (string[0] = '-')
              chars.scanned := 1
            TRUE
              chars.scanned := 0
          More := (SIZE string) > chars.scanned
      TRUE
        More := FALSE
    digit := 0
    WHILE More AND (chars.scanned < (SIZE string))
      SEQ
        --{{{  n := 10.n + digit (version for functions compiler)
        carry, n[0] := LONGPROD (n[0], 10, digit)
        carry, n[1] := LONGPROD (n[1], 10, carry)
        carry, n[2] := LONGPROD (n[2], 10, carry)
        carry, n[3] := LONGPROD (n[3], 10, carry)
        --}}}
        Error := Error OR (carry <> 0)
        ValidDigit (digit, More, string[chars.scanned])
        chars.scanned := chars.scanned + 1
    IF
      More
        SEQ
          --{{{  n := 10.n + digit (version for functions compiler)
          carry, n[0] := LONGPROD (n[0], 10, digit)
          carry, n[1] := LONGPROD (n[1], 10, carry)
          carry, n[2] := LONGPROD (n[2], 10, carry)
          carry, n[3] := LONGPROD (n[3], 10, carry)
          --}}}
          Error := Error OR (carry <> 0)
          IF
            Neg
              SEQ
                --{{{  n := -n calculation for functions compiler
                carry, n[0] := LONGDIFF (0, n[0], 0)
                carry, n[1] := LONGDIFF (0, n[1], carry)
                carry, n[2] := LONGDIFF (0, n[2], carry)
                carry, n[3] := LONGDIFF (0, n[3], carry)
                --}}}
                Error := Error OR (n[3] > 0)
            TRUE
              Error := Error OR (n[3] < 0)
      TRUE
        Error := TRUE
:
