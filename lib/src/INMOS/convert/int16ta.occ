#OPTION "E V" -- no compiler libraries, no vector space
#COMMENT "Type conversion library V1.2 22/11/90"
#COMMENT "(c) Copyright INMOS Limited 1988"
#USE "ioconv.lib"
--{{{  history
-- V1.0, 1-Jul-88
-- Added V to OPTIONs; V1.1, 22-Mar-90 SRH
-- Bug fix of STRINGTOINT16 report number TS/822; Error now correctly set,
-- and n contains low order bits when string overflows INT32 range; V1.2,
-- 22-Nov-90 SRH
--}}}
--{{{  STRINGTOINT16 TA
PROC STRINGTOINT16 (BOOL Error, INT16 n, VAL []BYTE string)

  --{{{  specification
  -- Purpose:  To convert to an INT16 the value represented by string.
  -- Out:      Error - TRUE if the value of string overflows the INT16 range;
  --           TRUE if there are any illegal characters in string;
  --           FALSE otherwise
  -- Out:      n - if the value that string represents does not overflow
  --           the INT16 range then n is the INT16 that string represents,
  --           with the convention that n is zero if string is empty;
  --           otherwise n will be the value of the portion of string up
  --           to any illegal character, where n is zero if an illegal
  --           character is in the first position of string, or if the
  --           INT16 range overflows n will contain the low order bits
  --           of the binary representation of string
  -- In:       string - the characters that are to be converted to an
  --           INT16
  -- Notes:    A plus ( + ) or a minus ( - ) sign is allowed in the
  --           first position of string.
  --           An illegal character is any non-numeric character, other
  --           than + or - in the first position.
  --}}}
  --{{{  more information
  --           This routine assumes that it is written to be compiled
  --           for a 32-bit processor.
  --}}}

  INT m :
  SEQ
    STRINGTOINT (Error, m, string)
    [ 2 ]INT16 m.prime RETYPES m :
    n := m.prime[ 0 ]  -- n assigned low order bits of m
    IF
      Error
        SKIP
      ( m < (INT (MOSTNEG INT16)) ) OR ( m > (INT (MOSTPOS INT16)) )
        Error := TRUE
      TRUE
        SKIP
:
--}}}
--{{{  INT16TOSTRING TA
PROC INT16TOSTRING (INT len, []BYTE string, VAL INT16 n)
  INTTOSTRING (len, string, INT n)
:
--}}}
