#OPTION "V"  -- no vector space
#COMMENT "Floating point maths library, V1.1 27/03/90"
#COMMENT "(c) Copyright INMOS Limited 1988"
#INCLUDE "mathhdr.inc"
#ifdef C
#PRAGMA TRANSLATE ACOS "ACOS%c"
#else
#ifdef FORTRAN
#PRAGMA TRANSLATE ACOS "ACOS%f"
#PRAGMA TRANSLATE ACOSP "ACOSP%f"
#endif
#endif

REAL32 FUNCTION ACOS (VAL REAL32 X)

  --{{{  history
  -- V1.0 1-Jul-88
  -- Added OPTION "V"; V1.1 27-Mar-90 SRH
  --}}}

  REAL32 Result :
  VALOF
    IF
      NOTFINITE (X)
        --{{{  NaNs and Infs
        IF
          ISNAN (X)
            Result := X
          TRUE
            Result := undefined.NaN
        --}}}
      --{{{  definitions and variables
      VAL P2 IS -5.04400557E-1(REAL32) :
      VAL P1 IS  9.33935835E-1(REAL32) :
      VAL Q1 IS -5.54846723(REAL32) :
      VAL Q0 IS  5.60363004(REAL32) :
      VAL XWork IS ABS (X) :
      --}}}
      IF
        XWork > One
          Result := undefined.NaN
        XWork = One
          --{{{  result depends on sign
          IF
            X < Zero
              Result := Pi
            TRUE
              Result := Zero
          --}}}
        XWork > Half
          --{{{  reduce argument & compute result
          REAL32 Y, G, RWork :
          SEQ
            G := DIVBY2 (One - XWork)
            Y := MULBY2 (SQRT (G))
            RWork := Y + (Y * ((((P2 * G) + P1) * G)/(((G + Q1) * G) + Q0)))
            IF
              X < Zero
                Result := Pi - RWork
              TRUE
                Result := RWork
          --}}}
        TRUE
          --{{{  remaining case
          VAL G IS X * X :
          Result := PiBy2 - (X + (X * ((((P2 * G) + P1) * G)/(((G + Q1) * G) + Q0))))
          --}}}
    RESULT Result
:
#ifdef FORTRAN
--{{{  ACOSP
REAL32 FUNCTION ACOSP( VAL INT dummy, VAL INT X )

  -- ACOSP exists for when the FORTRAN intrinsic ACOS is passed as a
  -- parameter to a routine.  The FORTRAN compiler will see the interface
  -- to ACOSP.  When ACOSP is called from FORTRAN the default FORTRAN
  -- calling conventions are used, i.e. pass a gsb pointer and pass
  -- parameters by reference.  Due to these facts ACOSP has a dummy
  -- parameter to catch the gsb and ASM code to dereference its argument
  -- which is in fact a pointer to the true argument.
  -- We use INTs as arguments for ACOSP because an INT has the same size
  -- as a pointer.

  REAL32 Xtemp :
  VALOF
    ASM
      LD       X
      LDNL     0
      ST       Xtemp
    RESULT ACOS( Xtemp )
:
--}}}
#endif
