#OPTION "V"  -- no vector space
#COMMENT "Floating point maths library, V1.1 27/03/90"
#COMMENT "(c) Copyright INMOS Limited 1988"
#INCLUDE "mathhdr.inc"
#ifdef C
#PRAGMA TRANSLATE SIN "SIN%c"
#endif

REAL32 FUNCTION SIN (VAL REAL32 X)

  --{{{  history
  -- 27 Jan 88
  -- V1.0 1-Jul-88
  -- Added OPTION "V"; V1.1 27-Mar-90 SRH
  --}}}

  REAL32 RWork :
  VALOF
    IF
      NOTFINITE (X)
        --{{{  NaN or Inf
        IF
          ISNAN (X)
            RWork := X    -- transmit NaN
          TRUE
            RWork := undefined.NaN
        --}}}
      TRUE
        INT32 N :
        REAL32 XWork :
        BOOL ok :
        SEQ
          ok, N, XWork := ARGUMENT.REDUCE (X, Pi, Pi.err)
          IF
            ok
              SEQ
                --{{{  approximation in primary range
                IF
                  ABS(XWork) > Nearly.PiBy2
                    IF
                      XWork < Zero
                        RWork := - One
                      TRUE
                        RWork := One
                  TRUE
                    -- XWork is in the range [-Nearly.PiBy2, Nearly.PiBy2]
                    -- This implementation uses a polynomial approximation from
                    -- Cody & Waite "Software Manual for the Elementary Functions",
                    -- pp125-138. The floating point version is used here.
                    VAL R IS [2.601903036E-6(REAL32), -1.980741872E-4(REAL32),
                              8.333025139E-3(REAL32), -1.666665668E-1(REAL32)] :
                    VAL REAL32 G IS XWork * XWork :
                    RWork := ((((((((R[0]*G)+R[1])*G)+R[2])*G)+R[3])*G)*XWork)+XWork
                --}}}
                --{{{  set sign
                IF
                  (N /\ one) = one
                    RWork := - RWork
                  TRUE
                    SKIP
                --}}}
            TRUE
              RWork := inexact.NaN
    RESULT RWork
:
