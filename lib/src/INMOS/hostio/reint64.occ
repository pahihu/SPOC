#COMMENT "Host i/o library, V1.1, 25/05/90"
#COMMENT "(c) Copyright INMOS Limited 1989"
#INCLUDE "hostio.inc"
#USE "solib.lib"
#USE "convert.lib"

PROC so.read.echo.int64 (CHAN OF SP fs, ts, INT64 n, BOOL error)

  --{{{  specification
  -- Purpose:  To read a string containing a representation of a 64-bit
  --           decimal integer from the keyboard, and to echo it to standard
  --           out.
  -- Channels: fs - from server
  --           ts - to server
  -- Out:      n - if error is FALSE, the value of the integer read; otherwise
  --           undefined
  -- Out:      error - FALSE if nothing went wrong in the operation; otherwise
  --           TRUE:
  --           1) if the integer read overflows the INT64 range
  --           2) if a non-numeric character is found in the input string ( other
  --           than a + or - in the first character position )
  -- Notes:    The integer may commence with a + or a - sign.
  --           The number typed at the keyboard must be terminated by pressing
  --           'RETURN'.
  --}}}

  [20]BYTE string : -- 20 characters in -9223372036854775808 = MOSTNEG INT64
  INT len :
  BYTE result :

  SEQ
    so.read.echo.line (fs, ts, len, string, result)
    IF
      result = spr.ok
        STRINGTOINT64 (error, n, [string FROM 0 FOR len])
      TRUE
        error := TRUE
:
