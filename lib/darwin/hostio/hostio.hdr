#ifndef __hostio_INCLUDES__
#define __hostio_INCLUDES__
void P_so_mark_channels_hostio (CHAN *fs_183,CHAN *ts_184);
void P_so_write_char_hostio (CHAN *fs_189,CHAN *ts_190,BYTE ch_191);
void P_so_write_nl_hostio (CHAN *fs_193,CHAN *ts_194);
void P_so_write_string_hostio (CHAN *fs_196,CHAN *ts_197,INT string_198_Dim0,BYTE *string_198);
void P_so_write_string_nl_hostio (CHAN *fs_201,CHAN *ts_202,INT string_203_Dim0,BYTE *string_203);
void P_so_write_int_hostio (CHAN *fs_205,CHAN *ts_206,INT n_207,INT field_208);
void P_so_write_int32_hostio (CHAN *fs_210,CHAN *ts_211,INT32 n_212,INT field_213);
void P_so_write_hex_int_hostio (CHAN *fs_215,CHAN *ts_216,INT n_217,INT field_218);
void P_so_write_hex_int32_hostio (CHAN *fs_220,CHAN *ts_221,INT32 n_222,INT field_223);
void P_so_write_real32_hostio (CHAN *fs_225,CHAN *ts_226,REAL32 r_227,INT Ip_228,INT Dp_229);
void P_so_write_real64_hostio (CHAN *fs_233,CHAN *ts_234,REAL64 r_235,INT Ip_236,INT Dp_237);
void P_so_write_int64_hostio (CHAN *fs_241,CHAN *ts_242,INT64 r_243,INT field_244);
void P_so_write_hex_int64_hostio (CHAN *fs_248,CHAN *ts_249,INT64 r_250,INT field_251);
void P_so_fwrite_char_hostio (CHAN *fs_255,CHAN *ts_256,INT32 streamid_257,BYTE ch_258,BYTE *result_259);
void P_so_fwrite_nl_hostio (CHAN *fs_262,CHAN *ts_263,INT32 streamid_264,BYTE *result_265);
void P_so_fwrite_string_hostio (CHAN *fs_267,CHAN *ts_268,INT32 streamid_269,INT string_270_Dim0,BYTE *string_270,BYTE *result_271);
void P_so_fwrite_string_nl_hostio (CHAN *fs_274,CHAN *ts_275,INT32 streamid_276,INT string_277_Dim0,BYTE *string_277,BYTE *result_278);
void P_so_fwrite_int_hostio (CHAN *fs_280,CHAN *ts_281,INT32 streamid_282,INT n_283,INT field_284,BYTE *result_285);
void P_so_fwrite_int32_hostio (CHAN *fs_288,CHAN *ts_289,INT32 streamid_290,INT32 n_291,INT field_292,BYTE *result_293);
void P_so_fwrite_hex_int_hostio (CHAN *fs_295,CHAN *ts_296,INT32 streamid_297,INT n_298,INT field_299,BYTE *result_300);
void P_so_fwrite_hex_int32_hostio (CHAN *fs_303,CHAN *ts_304,INT32 streamid_305,INT32 n_306,INT field_307,BYTE *result_308);
void P_so_fwrite_real32_hostio (CHAN *fs_310,CHAN *ts_311,INT32 streamid_312,REAL32 r_313,INT Ip_314,INT Dp_315,BYTE *result_316);
void P_so_fwrite_real64_hostio (CHAN *fs_320,CHAN *ts_321,INT32 streamid_322,REAL64 r_323,INT Ip_324,INT Dp_325,BYTE *result_326);
void P_so_fwrite_int64_hostio (CHAN *fs_330,CHAN *ts_331,INT32 streamid_332,INT64 r_333,INT field_334,BYTE *result_335);
void P_so_fwrite_hex_int64_hostio (CHAN *fs_339,CHAN *ts_340,INT32 streamid_341,INT64 r_342,INT field_343,BYTE *result_344);
void P_MALLOC_hostio (INT32 *pointer_348,INT size_349);
void P_FREE_hostio (INT32 *pointer_351);
void P_STRING_OCCAM_TO_C_hostio (INT occam_353_Dim0,BYTE *occam_353,INT32 c_354);
void P_so_open_hostio (CHAN *fs_358,CHAN *ts_359,INT name_360_Dim0,BYTE *name_360,BYTE type_361,BYTE mode_362,INT32 *streamid_363,BYTE *result_364);
void P_so_close_hostio (CHAN *fs_373,CHAN *ts_374,INT32 *streamid_375,BYTE *result_376);
void P_so_test_exists_hostio (CHAN *fs_379,CHAN *ts_380,INT name_381_Dim0,BYTE *name_381,BOOL *exists_382);
void P_so_open_temp_hostio (CHAN *fs_386,CHAN *ts_387,BYTE type_388,BYTE *filename_389,INT32 *streamid_390,BYTE *result_391);
void P_so_popen_read_hostio (CHAN *fs_398,CHAN *ts_399,INT filename_400_Dim0,BYTE *filename_400,INT path_variable_name_401_Dim0,BYTE *path_variable_name_401,BYTE open_type_402,INT *full_len_403,INT full_name_404_Dim0,BYTE *full_name_404,INT32 *streamid_405,BYTE *result_406);
void P_so_write_hostio (CHAN *fs_409,CHAN *ts_410,INT32 streamid_411,INT data_412_Dim0,BYTE *data_412,INT *length_413);
void P_so_read_hostio (CHAN *fs_416,CHAN *ts_417,INT32 streamid_418,INT *length_419,INT data_420_Dim0,BYTE *data_420);
void P_so_gets_hostio (CHAN *fs_423,CHAN *ts_424,INT32 streamid_425,INT *length_426,INT data_427_Dim0,BYTE *data_427,BYTE *result_428);
void P_so_puts_hostio (CHAN *fs_432,CHAN *ts_433,INT32 streamid_434,INT data_435_Dim0,BYTE *data_435,BYTE *result_436);
void P_so_flush_hostio (CHAN *fs_442,CHAN *ts_443,INT32 streamid_444,BYTE *result_445);
void P_so_seek_hostio (CHAN *fs_448,CHAN *ts_449,INT32 streamid_450,INT32 offset_451,INT32 origin_452,BYTE *result_453);
void P_so_tell_hostio (CHAN *fs_457,CHAN *ts_458,INT32 streamid_459,INT32 *position_460,BYTE *result_461);
void P_so_eof_hostio (CHAN *fs_464,CHAN *ts_465,INT32 streamid_466,BYTE *result_467);
void P_so_ferror_hostio (CHAN *fs_470,CHAN *ts_471,INT32 streamid_472,INT32 *error_no_473,INT *length_474,INT message_475_Dim0,BYTE *message_475,BYTE *result_476);
void P_so_remove_hostio (CHAN *fs_479,CHAN *ts_480,INT name_481_Dim0,BYTE *name_481,BYTE *result_482);
void P_so_rename_hostio (CHAN *fs_486,CHAN *ts_487,INT oldname_488_Dim0,BYTE *oldname_488,INT newname_489_Dim0,BYTE *newname_489,BYTE *result_490);
void P_so_commandline_hostio (CHAN *fs_495,CHAN *ts_496,BYTE all_497,INT *length_498,INT string_499_Dim0,BYTE *string_499,BYTE *result_500);
void P_so_parse_command_line_hostio (CHAN *fs_505,CHAN *ts_506,INT option_strings_507_Dim0,INT option_strings_507_Dim1,BYTE *option_strings_507,INT option_parameters_required_508_Dim0,INT *option_parameters_required_508,INT option_exists_509_Dim0,BOOL *option_exists_509,INT option_parameters_510_Dim0,INT *option_parameters_510,INT *error_len_511,INT line_512_Dim0,BYTE *line_512);
void P_so_getenv_hostio (CHAN *fs_515,CHAN *ts_516,INT name_517_Dim0,BYTE *name_517,INT *length_518,INT value_519_Dim0,BYTE *value_519,BYTE *result_520);
void P_so_time_hostio (CHAN *fs_526,CHAN *ts_527,INT32 *localtime_528,INT32 *UTCtime_529);
void P_so_system_hostio (CHAN *fs_531,CHAN *ts_532,INT command_533_Dim0,BYTE *command_533,INT32 *status_534,BYTE *result_535);
void P_so_exit_hostio (CHAN *fs_537,CHAN *ts_538,INT32 status_539);
void P_so_core_hostio (CHAN *fs_541,CHAN *ts_542,INT32 offset_543,INT *bytes_read_544,INT data_545_Dim0,BYTE *data_545,BYTE *result_546);
void P_so_version_hostio (CHAN *fs_549,CHAN *ts_550,BYTE *version_551,BYTE *host_552,BYTE *os_553,BYTE *board_554);
void P_so_getkey_hostio (CHAN *fs_556,CHAN *ts_557,BYTE *key_558,BYTE *result_559);
void P_so_read_echo_line_hostio (CHAN *fs_562,CHAN *ts_563,INT *len_564,INT line_565_Dim0,BYTE *line_565,BYTE *result_566);
void P_so_read_echo_int_hostio (CHAN *fs_569,CHAN *ts_570,INT *n_571,BOOL *error_572);
void P_sp_getkey_hostio (CHAN *fs_578,CHAN *ts_579,BYTE *key_580,BYTE *result_581);
#endif
